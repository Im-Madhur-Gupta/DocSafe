{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_accessNFT",
          "type": "address"
        }
      ],
      "name": "addAccessNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowed",
          "type": "address"
        }
      ],
      "name": "addAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "fileNames",
          "type": "string[]"
        }
      ],
      "name": "createSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_fileName",
          "type": "string"
        }
      ],
      "name": "deleteFileFromSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "deleteSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NFT",
          "type": "address"
        }
      ],
      "name": "getSafesForNFT",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessNFT",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "fileNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct FileManager.Safe[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getSafesSharedWith",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessNFT",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "fileNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct FileManager.Safe[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserSafes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessNFT",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "fileNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct FileManager.Safe[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowed",
          "type": "address"
        }
      ],
      "name": "removeAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5d52a67b7224d533bbe51a2209cf162cc0f74b19bf4d8b60a92054eeebe6186a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2419294",
    "logsBloom": "0x
    "blockHash": "0x9ed50c1732f569b2c53fd9bb4ab9655773975e144ef51fc6b4ccd1403f40e035",
    "transactionHash": "0x5d52a67b7224d533bbe51a2209cf162cc0f74b19bf4d8b60a92054eeebe6186a",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2419294",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0e7c4f814c002506a278e30f458fa707",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_accessNFT\",\"type\":\"address\"}],\"name\":\"addAccessNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_allowed\",\"type\":\"address\"}],\"name\":\"addAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"name\":\"createSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_fileName\",\"type\":\"string\"}],\"name\":\"deleteFileFromSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"deleteSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NFT\",\"type\":\"address\"}],\"name\":\"getSafesForNFT\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessNFT\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"internalType\":\"struct FileManager.Safe[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getSafesSharedWith\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessNFT\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"internalType\":\"struct FileManager.Safe[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserSafes\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessNFT\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"internalType\":\"struct FileManager.Safe[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_allowed\",\"type\":\"address\"}],\"name\":\"removeAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FileManager.sol\":\"FileManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/FileManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract FileManager {\\n    struct Safe {\\n        string name;\\n        string cid;\\n        address owner;\\n        address accessNFT;\\n        string[] fileNames;\\n    }\\n\\n    mapping(uint256 => Safe) private safes;\\n    mapping(uint256 => mapping(address => bool)) allowed;\\n    uint256 public safeCount;\\n\\n    function createSafe(\\n        string memory _name,\\n        string memory _cid,\\n        string[] memory fileNames\\n    ) public {\\n        safeCount++;\\n        safes[safeCount] = Safe(_name, _cid, msg.sender, address(0), fileNames);\\n    }\\n\\n    function addAllowed(string memory _name, address _allowed) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can add allowed\\\"\\n                );\\n                allowed[i][_allowed] = true;\\n            }\\n        }\\n    }\\n\\n    function addAccessNFT(string memory _name, address _accessNFT) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can add allowed\\\"\\n                );\\n                safes[i].accessNFT = _accessNFT;\\n            }\\n        }\\n    }\\n\\n    function removeAllowed(string memory _name, address _allowed) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can remove allowed\\\"\\n                );\\n                allowed[i][_allowed] = false;\\n            }\\n        }\\n    }\\n\\n    function getSafesSharedWith(\\n        address _user\\n    ) public view returns (Safe[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (allowed[i][_user]) {\\n                count++;\\n            }\\n        }\\n\\n        Safe[] memory sharedSafes = new Safe[](count);\\n        count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (allowed[i][_user]) {\\n                sharedSafes[count] = safes[i];\\n                count++;\\n            }\\n        }\\n\\n        return sharedSafes;\\n    }\\n\\n    function getUserSafes(address _user) public view returns (Safe[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].owner == _user) {\\n                count++;\\n            }\\n        }\\n\\n        Safe[] memory userSafes = new Safe[](count);\\n        count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].owner == _user) {\\n                userSafes[count] = safes[i];\\n                count++;\\n            }\\n        }\\n\\n        return userSafes;\\n    }\\n\\n    function deleteSafe(string memory _name) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can delete safe\\\"\\n                );\\n                delete safes[i];\\n                safeCount--;\\n                return;\\n            }\\n        }\\n    }\\n\\n    function deleteFileFromSafe(\\n        string memory _name,\\n        string memory _fileName\\n    ) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can delete file\\\"\\n                );\\n                for (uint256 j = 0; j < safes[i].fileNames.length; j++) {\\n                    if (\\n                        keccak256(\\n                            abi.encodePacked(safes[i].fileNames[j])\\n                        ) == keccak256(abi.encodePacked(_fileName))\\n                    ) {\\n                        delete safes[i].fileNames[j];\\n                        return;\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    function getSafesForNFT(address NFT) public view returns(Safe[] memory) {\\n        require(\\n            IERC721(NFT).balanceOf(msg.sender) > 0,\\n            \\\"You must own an acceptance NFT to vote for a proposal\\\"\\n        );\\n\\n        uint256 count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].accessNFT == NFT) {\\n                count++;\\n            }\\n        }\\n\\n        Safe[] memory allowedSafes = new Safe[](count);\\n        count = 0;\\n\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].accessNFT == NFT) {\\n                allowedSafes[count]= safes[i];\\n                count++;\\n            }\\n        }\\n\\n        return allowedSafes;\\n    }\\n}\\n\",\"keccak256\":\"0x9d77bc1e0e0328835a164a090fcbc64448ea1d461996105a2e1add06ef300cb4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612ae3806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637df73472116100665780637df7347214610143578063be6916941461015f578063e4bcd9021461017d578063ed1f9ca614610199578063ee598f33146101c95761009e565b806308578a63146100a35780631789ac2b146100bf578063317960c4146100db578063383efbd5146100f75780636ef6682714610127575b600080fd5b6100bd60048036038101906100b89190611d7a565b6101f9565b005b6100d960048036038101906100d49190611dd6565b610380565b005b6100f560048036038101906100f09190611d7a565b610563565b005b610111600480360381019061010c9190611e1f565b6106ff565b60405161011e91906120e2565b60405180910390f35b610141600480360381019061013c9190612104565b610b78565b005b61015d60048036038101906101589190612262565b610daa565b005b610167610f09565b6040516101749190612322565b60405180910390f35b61019760048036038101906101929190611d7a565b610f0f565b005b6101b360048036038101906101ae9190611e1f565b6110aa565b6040516101c091906120e2565b60405180910390f35b6101e360048036038101906101de9190611e1f565b6115e9565b6040516101f091906120e2565b60405180910390f35b6000600190505b600254811161037b578260405160200161021a9190612379565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016102559190612488565b60405160208183030381529060405280519060200120036103685760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030a906124fc565b60405180910390fd5b8160008083815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80806103739061254b565b915050610200565b505050565b6000600190505b600254811161055e57816040516020016103a19190612379565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016103dc9190612488565b604051602081830303815290604052805190602001200361054b5760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610491906125df565b60405180910390fd5b600080828152602001908152602001600020600080820160006104bd9190611a6c565b6001820160006104cd9190611a6c565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600061052b9190611aac565b505060026000815480929190610540906125ff565b919050555050610560565b80806105569061254b565b915050610387565b505b50565b6000600190505b60025481116106fa57826040516020016105849190612379565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016105bf9190612488565b60405160208183030381529060405280519060200120036106e75760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490612674565b60405180910390fd5b60006001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806106f29061254b565b91505061056a565b505050565b6060600080600190505b6002548111610797576001600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156107845781806107809061254b565b9250505b808061078f9061254b565b915050610709565b5060008167ffffffffffffffff8111156107b4576107b3611bf1565b5b6040519080825280602002602001820160405280156107ed57816020015b6107da611acd565b8152602001906001900390816107d25790505b509050600091506000600190505b6002548111610b6d576001600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b5a576000808281526020019081526020016000206040518060a0016040529081600082018054610894906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546108c0906123bf565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b50505050508152602001600182018054610926906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610952906123bf565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b25578382906000526020600020018054610a98906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac4906123bf565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b505050505081526020019060010190610a79565b5050505081525050828481518110610b4057610b3f612694565b5b60200260200101819052508280610b569061254b565b9350505b8080610b659061254b565b9150506107fb565b508092505050919050565b6000600190505b6002548111610da45782604051602001610b999190612379565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610bd49190612488565b6040516020818303038152906040528051906020012003610d915760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c899061270f565b60405180910390fd5b60005b60008083815260200190815260200160002060040180549050811015610d8f5782604051602001610cc69190612379565b604051602081830303815290604052805190602001206000808481526020019081526020016000206004018281548110610d0357610d02612694565b5b90600052602060002001604051602001610d1d9190612488565b6040516020818303038152906040528051906020012003610d7c576000808381526020019081526020016000206004018181548110610d5f57610d5e612694565b5b906000526020600020016000610d759190611a6c565b5050610da6565b8080610d879061254b565b915050610c95565b505b8080610d9c9061254b565b915050610b7f565b505b5050565b60026000815480929190610dbd9061254b565b91905055506040518060a001604052808481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018281525060008060025481526020019081526020016000206000820151816000019081610e3f91906128c6565b506020820151816001019081610e5591906128c6565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190610f00929190611b28565b50905050505050565b60025481565b6000600190505b60025481116110a55782604051602001610f309190612379565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610f6b9190612488565b60405160208183030381529060405280519060200120036110925760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611029576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611020906124fc565b60405180910390fd5b600180600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b808061109d9061254b565b915050610f16565b505050565b606060008273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016110e791906129a7565b602060405180830381865afa158015611104573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112891906129ee565b11611168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115f90612a8d565b60405180910390fd5b600080600190505b6002548111611203578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111f05781806111ec9061254b565b9250505b80806111fb9061254b565b915050611170565b5060008167ffffffffffffffff8111156112205761121f611bf1565b5b60405190808252806020026020018201604052801561125957816020015b611246611acd565b81526020019060019003908161123e5790505b509050600091506000600190505b60025481116115de578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115cb576000808281526020019081526020016000206040518060a0016040529081600082018054611305906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611331906123bf565b801561137e5780601f106113535761010080835404028352916020019161137e565b820191906000526020600020905b81548152906001019060200180831161136157829003601f168201915b50505050508152602001600182018054611397906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546113c3906123bf565b80156114105780601f106113e557610100808354040283529160200191611410565b820191906000526020600020905b8154815290600101906020018083116113f357829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611596578382906000526020600020018054611509906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611535906123bf565b80156115825780601f1061155757610100808354040283529160200191611582565b820191906000526020600020905b81548152906001019060200180831161156557829003601f168201915b5050505050815260200190600101906114ea565b50505050815250508284815181106115b1576115b0612694565b5b602002602001018190525082806115c79061254b565b9350505b80806115d69061254b565b915050611267565b508092505050919050565b6060600080600190505b6002548111611686578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361167357818061166f9061254b565b9250505b808061167e9061254b565b9150506115f3565b5060008167ffffffffffffffff8111156116a3576116a2611bf1565b5b6040519080825280602002602001820160405280156116dc57816020015b6116c9611acd565b8152602001906001900390816116c15790505b509050600091506000600190505b6002548111611a61578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611a4e576000808281526020019081526020016000206040518060a0016040529081600082018054611788906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546117b4906123bf565b80156118015780601f106117d657610100808354040283529160200191611801565b820191906000526020600020905b8154815290600101906020018083116117e457829003601f168201915b5050505050815260200160018201805461181a906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611846906123bf565b80156118935780601f1061186857610100808354040283529160200191611893565b820191906000526020600020905b81548152906001019060200180831161187657829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611a1957838290600052602060002001805461198c906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546119b8906123bf565b8015611a055780601f106119da57610100808354040283529160200191611a05565b820191906000526020600020905b8154815290600101906020018083116119e857829003601f168201915b50505050508152602001906001019061196d565b5050505081525050828481518110611a3457611a33612694565b5b60200260200101819052508280611a4a9061254b565b9350505b8080611a599061254b565b9150506116ea565b508092505050919050565b508054611a78906123bf565b6000825580601f10611a8a5750611aa9565b601f016020900490600052602060002090810190611aa89190611b81565b5b50565b5080546000825590600052602060002090810190611aca9190611b9e565b50565b6040518060a001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054828255906000526020600020908101928215611b70579160200282015b82811115611b6f578251829081611b5f91906128c6565b5091602001919060010190611b48565b5b509050611b7d9190611b9e565b5090565b5b80821115611b9a576000816000905550600101611b82565b5090565b5b80821115611bbe5760008181611bb59190611a6c565b50600101611b9f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c2982611be0565b810181811067ffffffffffffffff82111715611c4857611c47611bf1565b5b80604052505050565b6000611c5b611bc2565b9050611c678282611c20565b919050565b600067ffffffffffffffff821115611c8757611c86611bf1565b5b611c9082611be0565b9050602081019050919050565b82818337600083830152505050565b6000611cbf611cba84611c6c565b611c51565b905082815260208101848484011115611cdb57611cda611bdb565b5b611ce6848285611c9d565b509392505050565b600082601f830112611d0357611d02611bd6565b5b8135611d13848260208601611cac565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d4782611d1c565b9050919050565b611d5781611d3c565b8114611d6257600080fd5b50565b600081359050611d7481611d4e565b92915050565b60008060408385031215611d9157611d90611bcc565b5b600083013567ffffffffffffffff811115611daf57611dae611bd1565b5b611dbb85828601611cee565b9250506020611dcc85828601611d65565b9150509250929050565b600060208284031215611dec57611deb611bcc565b5b600082013567ffffffffffffffff811115611e0a57611e09611bd1565b5b611e1684828501611cee565b91505092915050565b600060208284031215611e3557611e34611bcc565b5b6000611e4384828501611d65565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611eb2578082015181840152602081019050611e97565b60008484015250505050565b6000611ec982611e78565b611ed38185611e83565b9350611ee3818560208601611e94565b611eec81611be0565b840191505092915050565b611f0081611d3c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611f3e8383611ebe565b905092915050565b6000602082019050919050565b6000611f5e82611f06565b611f688185611f11565b935083602082028501611f7a85611f22565b8060005b85811015611fb65784840389528151611f978582611f32565b9450611fa283611f46565b925060208a01995050600181019050611f7e565b50829750879550505050505092915050565b600060a0830160008301518482036000860152611fe58282611ebe565b91505060208301518482036020860152611fff8282611ebe565b91505060408301516120146040860182611ef7565b5060608301516120276060860182611ef7565b506080830151848203608086015261203f8282611f53565b9150508091505092915050565b60006120588383611fc8565b905092915050565b6000602082019050919050565b600061207882611e4c565b6120828185611e57565b93508360208202850161209485611e68565b8060005b858110156120d057848403895281516120b1858261204c565b94506120bc83612060565b925060208a01995050600181019050612098565b50829750879550505050505092915050565b600060208201905081810360008301526120fc818461206d565b905092915050565b6000806040838503121561211b5761211a611bcc565b5b600083013567ffffffffffffffff81111561213957612138611bd1565b5b61214585828601611cee565b925050602083013567ffffffffffffffff81111561216657612165611bd1565b5b61217285828601611cee565b9150509250929050565b600067ffffffffffffffff82111561219757612196611bf1565b5b602082029050602081019050919050565b600080fd5b60006121c06121bb8461217c565b611c51565b905080838252602082019050602084028301858111156121e3576121e26121a8565b5b835b8181101561222a57803567ffffffffffffffff81111561220857612207611bd6565b5b8086016122158982611cee565b855260208501945050506020810190506121e5565b5050509392505050565b600082601f83011261224957612248611bd6565b5b81356122598482602086016121ad565b91505092915050565b60008060006060848603121561227b5761227a611bcc565b5b600084013567ffffffffffffffff81111561229957612298611bd1565b5b6122a586828701611cee565b935050602084013567ffffffffffffffff8111156122c6576122c5611bd1565b5b6122d286828701611cee565b925050604084013567ffffffffffffffff8111156122f3576122f2611bd1565b5b6122ff86828701612234565b9150509250925092565b6000819050919050565b61231c81612309565b82525050565b60006020820190506123376000830184612313565b92915050565b600081905092915050565b600061235382611e78565b61235d818561233d565b935061236d818560208601611e94565b80840191505092915050565b60006123858284612348565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123d757607f821691505b6020821081036123ea576123e9612390565b5b50919050565b60008190508160005260206000209050919050565b60008154612412816123bf565b61241c818661233d565b94506001821660008114612437576001811461244c5761247f565b60ff198316865281151582028601935061247f565b612455856123f0565b60005b8381101561247757815481890152600182019150602081019050612458565b838801955050505b50505092915050565b60006124948284612405565b915081905092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2061646420616c6c6f776564000000000000600082015250565b60006124e6601a8361249f565b91506124f1826124b0565b602082019050919050565b60006020820190508181036000830152612515816124d9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061255682612309565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125885761258761251c565b5b600182019050919050565b7f4f6e6c79206f776e65722063616e2064656c6574652073616665000000000000600082015250565b60006125c9601a8361249f565b91506125d482612593565b602082019050919050565b600060208201905081810360008301526125f8816125bc565b9050919050565b600061260a82612309565b91506000820361261d5761261c61251c565b5b600182039050919050565b7f4f6e6c79206f776e65722063616e2072656d6f766520616c6c6f776564000000600082015250565b600061265e601d8361249f565b915061266982612628565b602082019050919050565b6000602082019050818103600083015261268d81612651565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c79206f776e65722063616e2064656c6574652066696c65000000000000600082015250565b60006126f9601a8361249f565b9150612704826126c3565b602082019050919050565b60006020820190508181036000830152612728816126ec565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261277c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261273f565b612786868361273f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127c36127be6127b984612309565b61279e565b612309565b9050919050565b6000819050919050565b6127dd836127a8565b6127f16127e9826127ca565b84845461274c565b825550505050565b600090565b6128066127f9565b6128118184846127d4565b505050565b5b818110156128355761282a6000826127fe565b600181019050612817565b5050565b601f82111561287a5761284b816123f0565b6128548461272f565b81016020851015612863578190505b61287761286f8561272f565b830182612816565b50505b505050565b600082821c905092915050565b600061289d6000198460080261287f565b1980831691505092915050565b60006128b6838361288c565b9150826002028217905092915050565b6128cf82611e78565b67ffffffffffffffff8111156128e8576128e7611bf1565b5b6128f282546123bf565b6128fd828285612839565b600060209050601f831160018114612930576000841561291e578287015190505b61292885826128aa565b865550612990565b601f19841661293e866123f0565b60005b8281101561296657848901518255600182019150602085019450602081019050612941565b86831015612983578489015161297f601f89168261288c565b8355505b6001600288020188555050505b505050505050565b6129a181611d3c565b82525050565b60006020820190506129bc6000830184612998565b92915050565b6129cb81612309565b81146129d657600080fd5b50565b6000815190506129e8816129c2565b92915050565b600060208284031215612a0457612a03611bcc565b5b6000612a12848285016129d9565b91505092915050565b7f596f75206d757374206f776e20616e20616363657074616e6365204e4654207460008201527f6f20766f746520666f7220612070726f706f73616c0000000000000000000000602082015250565b6000612a7760358361249f565b9150612a8282612a1b565b604082019050919050565b60006020820190508181036000830152612aa681612a6a565b905091905056fea26469706673582212207452b3decfcfa31594d2d3cce15a4227aa9c5fd8886bc5bc5f4c20caf5bee9f564736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80637df73472116100665780637df7347214610143578063be6916941461015f578063e4bcd9021461017d578063ed1f9ca614610199578063ee598f33146101c95761009e565b806308578a63146100a35780631789ac2b146100bf578063317960c4146100db578063383efbd5146100f75780636ef6682714610127575b600080fd5b6100bd60048036038101906100b89190611d7a565b6101f9565b005b6100d960048036038101906100d49190611dd6565b610380565b005b6100f560048036038101906100f09190611d7a565b610563565b005b610111600480360381019061010c9190611e1f565b6106ff565b60405161011e91906120e2565b60405180910390f35b610141600480360381019061013c9190612104565b610b78565b005b61015d60048036038101906101589190612262565b610daa565b005b610167610f09565b6040516101749190612322565b60405180910390f35b61019760048036038101906101929190611d7a565b610f0f565b005b6101b360048036038101906101ae9190611e1f565b6110aa565b6040516101c091906120e2565b60405180910390f35b6101e360048036038101906101de9190611e1f565b6115e9565b6040516101f091906120e2565b60405180910390f35b6000600190505b600254811161037b578260405160200161021a9190612379565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016102559190612488565b60405160208183030381529060405280519060200120036103685760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030a906124fc565b60405180910390fd5b8160008083815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80806103739061254b565b915050610200565b505050565b6000600190505b600254811161055e57816040516020016103a19190612379565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016103dc9190612488565b604051602081830303815290604052805190602001200361054b5760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610491906125df565b60405180910390fd5b600080828152602001908152602001600020600080820160006104bd9190611a6c565b6001820160006104cd9190611a6c565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600061052b9190611aac565b505060026000815480929190610540906125ff565b919050555050610560565b80806105569061254b565b915050610387565b505b50565b6000600190505b60025481116106fa57826040516020016105849190612379565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016105bf9190612488565b60405160208183030381529060405280519060200120036106e75760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490612674565b60405180910390fd5b60006001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806106f29061254b565b91505061056a565b505050565b6060600080600190505b6002548111610797576001600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156107845781806107809061254b565b9250505b808061078f9061254b565b915050610709565b5060008167ffffffffffffffff8111156107b4576107b3611bf1565b5b6040519080825280602002602001820160405280156107ed57816020015b6107da611acd565b8152602001906001900390816107d25790505b509050600091506000600190505b6002548111610b6d576001600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b5a576000808281526020019081526020016000206040518060a0016040529081600082018054610894906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546108c0906123bf565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b50505050508152602001600182018054610926906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610952906123bf565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b25578382906000526020600020018054610a98906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac4906123bf565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b505050505081526020019060010190610a79565b5050505081525050828481518110610b4057610b3f612694565b5b60200260200101819052508280610b569061254b565b9350505b8080610b659061254b565b9150506107fb565b508092505050919050565b6000600190505b6002548111610da45782604051602001610b999190612379565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610bd49190612488565b6040516020818303038152906040528051906020012003610d915760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c899061270f565b60405180910390fd5b60005b60008083815260200190815260200160002060040180549050811015610d8f5782604051602001610cc69190612379565b604051602081830303815290604052805190602001206000808481526020019081526020016000206004018281548110610d0357610d02612694565b5b90600052602060002001604051602001610d1d9190612488565b6040516020818303038152906040528051906020012003610d7c576000808381526020019081526020016000206004018181548110610d5f57610d5e612694565b5b906000526020600020016000610d759190611a6c565b5050610da6565b8080610d879061254b565b915050610c95565b505b8080610d9c9061254b565b915050610b7f565b505b5050565b60026000815480929190610dbd9061254b565b91905055506040518060a001604052808481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018281525060008060025481526020019081526020016000206000820151816000019081610e3f91906128c6565b506020820151816001019081610e5591906128c6565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190610f00929190611b28565b50905050505050565b60025481565b6000600190505b60025481116110a55782604051602001610f309190612379565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610f6b9190612488565b60405160208183030381529060405280519060200120036110925760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611029576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611020906124fc565b60405180910390fd5b600180600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b808061109d9061254b565b915050610f16565b505050565b606060008273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016110e791906129a7565b602060405180830381865afa158015611104573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112891906129ee565b11611168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115f90612a8d565b60405180910390fd5b600080600190505b6002548111611203578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111f05781806111ec9061254b565b9250505b80806111fb9061254b565b915050611170565b5060008167ffffffffffffffff8111156112205761121f611bf1565b5b60405190808252806020026020018201604052801561125957816020015b611246611acd565b81526020019060019003908161123e5790505b509050600091506000600190505b60025481116115de578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115cb576000808281526020019081526020016000206040518060a0016040529081600082018054611305906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611331906123bf565b801561137e5780601f106113535761010080835404028352916020019161137e565b820191906000526020600020905b81548152906001019060200180831161136157829003601f168201915b50505050508152602001600182018054611397906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546113c3906123bf565b80156114105780601f106113e557610100808354040283529160200191611410565b820191906000526020600020905b8154815290600101906020018083116113f357829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611596578382906000526020600020018054611509906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611535906123bf565b80156115825780601f1061155757610100808354040283529160200191611582565b820191906000526020600020905b81548152906001019060200180831161156557829003601f168201915b5050505050815260200190600101906114ea565b50505050815250508284815181106115b1576115b0612694565b5b602002602001018190525082806115c79061254b565b9350505b80806115d69061254b565b915050611267565b508092505050919050565b6060600080600190505b6002548111611686578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361167357818061166f9061254b565b9250505b808061167e9061254b565b9150506115f3565b5060008167ffffffffffffffff8111156116a3576116a2611bf1565b5b6040519080825280602002602001820160405280156116dc57816020015b6116c9611acd565b8152602001906001900390816116c15790505b509050600091506000600190505b6002548111611a61578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611a4e576000808281526020019081526020016000206040518060a0016040529081600082018054611788906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546117b4906123bf565b80156118015780601f106117d657610100808354040283529160200191611801565b820191906000526020600020905b8154815290600101906020018083116117e457829003601f168201915b5050505050815260200160018201805461181a906123bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611846906123bf565b80156118935780601f1061186857610100808354040283529160200191611893565b820191906000526020600020905b81548152906001019060200180831161187657829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611a1957838290600052602060002001805461198c906123bf565b80601f01602080910402602001604051908101604052809291908181526020018280546119b8906123bf565b8015611a055780601f106119da57610100808354040283529160200191611a05565b820191906000526020600020905b8154815290600101906020018083116119e857829003601f168201915b50505050508152602001906001019061196d565b5050505081525050828481518110611a3457611a33612694565b5b60200260200101819052508280611a4a9061254b565b9350505b8080611a599061254b565b9150506116ea565b508092505050919050565b508054611a78906123bf565b6000825580601f10611a8a5750611aa9565b601f016020900490600052602060002090810190611aa89190611b81565b5b50565b5080546000825590600052602060002090810190611aca9190611b9e565b50565b6040518060a001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054828255906000526020600020908101928215611b70579160200282015b82811115611b6f578251829081611b5f91906128c6565b5091602001919060010190611b48565b5b509050611b7d9190611b9e565b5090565b5b80821115611b9a576000816000905550600101611b82565b5090565b5b80821115611bbe5760008181611bb59190611a6c565b50600101611b9f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c2982611be0565b810181811067ffffffffffffffff82111715611c4857611c47611bf1565b5b80604052505050565b6000611c5b611bc2565b9050611c678282611c20565b919050565b600067ffffffffffffffff821115611c8757611c86611bf1565b5b611c9082611be0565b9050602081019050919050565b82818337600083830152505050565b6000611cbf611cba84611c6c565b611c51565b905082815260208101848484011115611cdb57611cda611bdb565b5b611ce6848285611c9d565b509392505050565b600082601f830112611d0357611d02611bd6565b5b8135611d13848260208601611cac565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d4782611d1c565b9050919050565b611d5781611d3c565b8114611d6257600080fd5b50565b600081359050611d7481611d4e565b92915050565b60008060408385031215611d9157611d90611bcc565b5b600083013567ffffffffffffffff811115611daf57611dae611bd1565b5b611dbb85828601611cee565b9250506020611dcc85828601611d65565b9150509250929050565b600060208284031215611dec57611deb611bcc565b5b600082013567ffffffffffffffff811115611e0a57611e09611bd1565b5b611e1684828501611cee565b91505092915050565b600060208284031215611e3557611e34611bcc565b5b6000611e4384828501611d65565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611eb2578082015181840152602081019050611e97565b60008484015250505050565b6000611ec982611e78565b611ed38185611e83565b9350611ee3818560208601611e94565b611eec81611be0565b840191505092915050565b611f0081611d3c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611f3e8383611ebe565b905092915050565b6000602082019050919050565b6000611f5e82611f06565b611f688185611f11565b935083602082028501611f7a85611f22565b8060005b85811015611fb65784840389528151611f978582611f32565b9450611fa283611f46565b925060208a01995050600181019050611f7e565b50829750879550505050505092915050565b600060a0830160008301518482036000860152611fe58282611ebe565b91505060208301518482036020860152611fff8282611ebe565b91505060408301516120146040860182611ef7565b5060608301516120276060860182611ef7565b506080830151848203608086015261203f8282611f53565b9150508091505092915050565b60006120588383611fc8565b905092915050565b6000602082019050919050565b600061207882611e4c565b6120828185611e57565b93508360208202850161209485611e68565b8060005b858110156120d057848403895281516120b1858261204c565b94506120bc83612060565b925060208a01995050600181019050612098565b50829750879550505050505092915050565b600060208201905081810360008301526120fc818461206d565b905092915050565b6000806040838503121561211b5761211a611bcc565b5b600083013567ffffffffffffffff81111561213957612138611bd1565b5b61214585828601611cee565b925050602083013567ffffffffffffffff81111561216657612165611bd1565b5b61217285828601611cee565b9150509250929050565b600067ffffffffffffffff82111561219757612196611bf1565b5b602082029050602081019050919050565b600080fd5b60006121c06121bb8461217c565b611c51565b905080838252602082019050602084028301858111156121e3576121e26121a8565b5b835b8181101561222a57803567ffffffffffffffff81111561220857612207611bd6565b5b8086016122158982611cee565b855260208501945050506020810190506121e5565b5050509392505050565b600082601f83011261224957612248611bd6565b5b81356122598482602086016121ad565b91505092915050565b60008060006060848603121561227b5761227a611bcc565b5b600084013567ffffffffffffffff81111561229957612298611bd1565b5b6122a586828701611cee565b935050602084013567ffffffffffffffff8111156122c6576122c5611bd1565b5b6122d286828701611cee565b925050604084013567ffffffffffffffff8111156122f3576122f2611bd1565b5b6122ff86828701612234565b9150509250925092565b6000819050919050565b61231c81612309565b82525050565b60006020820190506123376000830184612313565b92915050565b600081905092915050565b600061235382611e78565b61235d818561233d565b935061236d818560208601611e94565b80840191505092915050565b60006123858284612348565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123d757607f821691505b6020821081036123ea576123e9612390565b5b50919050565b60008190508160005260206000209050919050565b60008154612412816123bf565b61241c818661233d565b94506001821660008114612437576001811461244c5761247f565b60ff198316865281151582028601935061247f565b612455856123f0565b60005b8381101561247757815481890152600182019150602081019050612458565b838801955050505b50505092915050565b60006124948284612405565b915081905092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2061646420616c6c6f776564000000000000600082015250565b60006124e6601a8361249f565b91506124f1826124b0565b602082019050919050565b60006020820190508181036000830152612515816124d9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061255682612309565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125885761258761251c565b5b600182019050919050565b7f4f6e6c79206f776e65722063616e2064656c6574652073616665000000000000600082015250565b60006125c9601a8361249f565b91506125d482612593565b602082019050919050565b600060208201905081810360008301526125f8816125bc565b9050919050565b600061260a82612309565b91506000820361261d5761261c61251c565b5b600182039050919050565b7f4f6e6c79206f776e65722063616e2072656d6f766520616c6c6f776564000000600082015250565b600061265e601d8361249f565b915061266982612628565b602082019050919050565b6000602082019050818103600083015261268d81612651565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c79206f776e65722063616e2064656c6574652066696c65000000000000600082015250565b60006126f9601a8361249f565b9150612704826126c3565b602082019050919050565b60006020820190508181036000830152612728816126ec565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261277c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261273f565b612786868361273f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127c36127be6127b984612309565b61279e565b612309565b9050919050565b6000819050919050565b6127dd836127a8565b6127f16127e9826127ca565b84845461274c565b825550505050565b600090565b6128066127f9565b6128118184846127d4565b505050565b5b818110156128355761282a6000826127fe565b600181019050612817565b5050565b601f82111561287a5761284b816123f0565b6128548461272f565b81016020851015612863578190505b61287761286f8561272f565b830182612816565b50505b505050565b600082821c905092915050565b600061289d6000198460080261287f565b1980831691505092915050565b60006128b6838361288c565b9150826002028217905092915050565b6128cf82611e78565b67ffffffffffffffff8111156128e8576128e7611bf1565b5b6128f282546123bf565b6128fd828285612839565b600060209050601f831160018114612930576000841561291e578287015190505b61292885826128aa565b865550612990565b601f19841661293e866123f0565b60005b8281101561296657848901518255600182019150602085019450602081019050612941565b86831015612983578489015161297f601f89168261288c565b8355505b6001600288020188555050505b505050505050565b6129a181611d3c565b82525050565b60006020820190506129bc6000830184612998565b92915050565b6129cb81612309565b81146129d657600080fd5b50565b6000815190506129e8816129c2565b92915050565b600060208284031215612a0457612a03611bcc565b5b6000612a12848285016129d9565b91505092915050565b7f596f75206d757374206f776e20616e20616363657074616e6365204e4654207460008201527f6f20766f746520666f7220612070726f706f73616c0000000000000000000000602082015250565b6000612a7760358361249f565b9150612a8282612a1b565b604082019050919050565b60006020820190508181036000830152612aa681612a6a565b905091905056fea26469706673582212207452b3decfcfa31594d2d3cce15a4227aa9c5fd8886bc5bc5f4c20caf5bee9f564736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2801,
        "contract": "contracts/FileManager.sol:FileManager",
        "label": "safes",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Safe)2796_storage)"
      },
      {
        "astId": 2807,
        "contract": "contracts/FileManager.sol:FileManager",
        "label": "allowed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 2809,
        "contract": "contracts/FileManager.sol:FileManager",
        "label": "safeCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Safe)2796_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FileManager.Safe)",
        "numberOfBytes": "32",
        "value": "t_struct(Safe)2796_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Safe)2796_storage": {
        "encoding": "inplace",
        "label": "struct FileManager.Safe",
        "members": [
          {
            "astId": 2786,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2788,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "cid",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 2790,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 2792,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "accessNFT",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 2795,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "fileNames",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}